<?xml version="1.0"?>
<launch>
  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find vrx_gazebo)/config/custom_rosconsole.conf"/>
  <!-- Gazebo world to load -->
  <arg name="world" default="$(find vrx_gazebo)/worlds/motor_anchoring.world" />
  <!-- If true, run gazebo GUI -->
  <arg name="gui" default="true" />
  <!-- If true, run gazebo in verbose mode -->
  <arg name="verbose" default="false"/>
  <!-- Set various other gazebo arguments-->
  <arg name="extra_gazebo_args" default=""/>
  <!-- Start in a default namespace -->
  <arg name="namespace" default="wamv"/>
  <!-- Do we lock the vessel to the world? -->
  <arg name="wamv_locked" default="false" />
  <!-- Start paused? -->
  <arg name="paused" default="false"/>
  <!-- Acoustic pinger position(s) -->
  <arg name="pinger_params" default="$(find vrx_gazebo)/config/pinger.yaml"/>

  <!-- Initial USV location and attitude-->

  <!-- real -->
  <arg name="real_x" default="0" />
  <arg name="real_y" default="0" />
  <arg name="real_z" default="0.1" />
  <arg name="real_P" default="0" />
  <arg name="real_R" default="0" />
  <arg name="real_Y" default="-6.2" />

  <arg name="thrust_config" default="T" />

  <!-- Do we load the VRX sensor suite? -->
  <arg name="vrx_sensors_enabled" default="true" />
  

  <!-- Start Gazebo with the world file -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"   value="$(arg world)"/>
    <arg name="verbose"      value="$(arg verbose)"/>
    <arg name="paused"       value="$(arg paused)"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui"          value="$(arg gui)" />
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
  </include>

  <!-- Load robot model -->
  <!-- Determine which model -->
  <arg name="h_config" value="$(eval int((thrust_config)=='H'))"/>
  <arg name="t_config" value="$(eval int((thrust_config)=='T'))"/>
  <arg name="x_config" value="$(eval int((thrust_config)=='X'))"/>

  <!-- For now - can only use the T configuration! -->
  <arg if="$(arg t_config)" name="urdf" default="$(find wamv_gazebo)/urdf/wamv_gazebo.urdf.xacro"/>

  <!-- real_wamv -->
  <arg name="real_sensors_enabled" default="false" />

  <param name="$(arg namespace)/robot_description"
      command="$(find xacro)/xacro &#x002D;&#x002D;inorder '$(arg urdf)'
      locked:=$(arg wamv_locked)		   
      thruster_config:=$(arg thrust_config)
      vrx_sensors_enabled:=$(arg real_sensors_enabled)
      namespace:=$(arg namespace) "/>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="wamv_tf_pub" >
    <remap from="robot_description" to="wamv/robot_description" />
    <remap from="joint_states" to="wamv/joint_states" />
  </node>

  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg real_x) -y $(arg real_y) -z $(arg real_z)
              -R $(arg real_R) -P $(arg real_P) -Y $(arg real_Y)
              -urdf -param $(arg namespace)/robot_description -model wamv"/>

</launch>
